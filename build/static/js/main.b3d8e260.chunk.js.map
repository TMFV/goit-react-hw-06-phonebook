{"version":3,"sources":["ContactForm/ContactForm.module.css","ContactForm/ContactForm.jsx","ContactList/ContactList.jsx","Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","contactForAdd","props","onSubmitData","reset","className","style","contactform","type","onSubmit","this","pattern","title","required","onChange","Component","ContactList","deleteId","Id","del","createList","contacts","map","contact","id","data-id","onClick","uuidv4","defaultProps","Filter","setFilterValue","toUpperCase","setFilterToState","App","filter","formSubmitHandler","data","repeatControl","cur","includes","arrayCont","alert","elementDelete","arr","idContact","elem","deleteContactFromContactList","newArrAfterDel","filterData","filterArr","fArr","localStorage","getItem","parsedContacts","JSON","parse","prevProps","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3d8e260.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactform\":\"ContactForm_contactform__1jNwu\"};","import style from './ContactForm.module.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  handleChange = event => {\n    /*     console.log(event.currentTarget);\n    console.log(event.currentTarget.name);\n    console.log(event.currentTarget.value); */\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n    //this.setState({ [event.currentTarget.name]: event.currentTarget.value });\n  };\n  /*   inputNameEvent = event => {\n    this.setState({ curName: event.currentTarget.value });\n  };\n  inputTelEvent = event => {\n    this.setState({ curTel: event.currentTarget.value });\n  }; */\n\n  handleSubmit = event => {\n    event.preventDefault();\n    let contactForAdd = { name: this.state.name, number: this.state.number };\n    //console.log(this.state);\n    this.props.onSubmitData(contactForAdd);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    return (\n      <div className={style.contactform}>\n        <form type=\"submit\" onSubmit={this.handleSubmit}>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.handleChange}\n              value={this.state.name}\n            />\n          </label>\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n              required\n              onChange={this.handleChange}\n              value={this.state.number}\n            />\n          </label>\n\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmitData: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass ContactList extends Component {\n  deleteId = Id => {\n    this.props.del(Id);\n  };\n  createList = () => {\n    return this.props.contacts.map(contact => {\n      return (\n        <li key={uuidv4()} id={contact.id}>\n          {`${contact.name}: ${contact.number}`}\n          <button\n            data-id={contact.id}\n            onClick={() => this.deleteId(contact.id)}\n          >\n            Delete\n          </button>\n        </li>\n      );\n    });\n  };\n\n  render() {\n    return <ul>{this.createList()}</ul>;\n  }\n}\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  del: PropTypes.func.isRequired,\n};\nContactList.defaultProps = {\n  contacts: [],\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Filter extends Component {\n  setFilterValue = event => {\n    let value = event.currentTarget.value.toUpperCase();\n    this.props.setFilterToState(value);\n  };\n\n  render() {\n    return (\n      <div>\n        <h4>Find contacts by name</h4>\n        <input onChange={this.setFilterValue}></input>\n      </div>\n    );\n  }\n}\n\nFilter.propTypes = {\n  setFilterToState: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React, { Component } from \"react\";\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    //console.log(\" component did mount\");\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    //console.log(parsedContacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //console.log(\"component did update\");\n    if (this.state.contacts !== prevState.contacts) {\n      //console.log(\"Контакти було оновлено\");\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  formSubmitHandler = (data) => {\n    this.repeatControl(data);\n  };\n\n  repeatControl = (data) => {\n    let nameArray = [];\n    nameArray = this.state.contacts.map((cur) => cur.name);\n    if (!nameArray.includes(data.name)) {\n      let arrayCont = [];\n      arrayCont = [\n        ...this.state.contacts,\n        { id: uuidv4(), name: data.name, number: data.number },\n      ];\n      return this.setState({ ...this.state, contacts: arrayCont });\n    } else {\n      alert(\" Контакт вже є у телефонній книзі!!!\");\n    }\n  };\n\n  elementDelete = (arr, idContact) => {\n    let newArr = arr.filter((elem) => elem.id !== idContact);\n    return newArr;\n  };\n\n  deleteContactFromContactList = (idContact) => {\n    let newArrAfterDel = this.elementDelete(this.state.contacts, idContact);\n    this.setState({\n      ...this.state,\n      contacts: [...newArrAfterDel],\n    });\n  };\n\n  setFilterToState = (filterData) => {\n    this.setState({ ...this.state, filter: `${filterData}` });\n  };\n\n  filterArr = (fArr) => {\n    let newArr = fArr.filter((cur) =>\n      cur.name.toUpperCase().includes(this.state.filter)\n    );\n    return newArr;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmitData={this.formSubmitHandler} />\n        <h1>Contacts</h1>\n        <Filter setFilterToState={this.setFilterToState} />\n        <ContactList\n          contacts={this.filterArr(this.state.contacts)}\n          del={this.deleteContactFromContactList}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}